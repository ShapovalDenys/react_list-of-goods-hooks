{"version":3,"sources":["Components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goodsFromServer","isReversed","sortByValue","selectValue","visibleGoods","sort","el1","el2","localeCompare","length","reverse","filteredGoods","filter","el","map","good","selectOptionsValue","App","useState","isVisible","setIsVisible","setIsReversed","setSortBy","setSelectValue","sortBy","sortIdentifier","className","type","onClick","value","onChange","e","target","ReactDOM","render","document","getElementById"],"mappings":"iOASaA,EAA4B,SAAC,GAKnC,IAJLC,EAII,EAJJA,gBACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,YACAC,EACI,EADJA,YAEMC,EAAY,YAAOJ,GAEzB,OAAQE,GACN,IAAK,iBACHE,EAAaC,MAAK,SAACC,EAAKC,GAAN,OAAcD,EAAIE,cAAcD,MAClD,MAEF,IAAK,SACHH,EAAaC,MAAK,SAACC,EAAKC,GAAN,OAAcD,EAAIG,OAASF,EAAIE,UAOjDR,GACFG,EAAaM,UAGf,IAAMC,EAAgBP,EAAaQ,QAAO,SAAAC,GAAE,OAAIA,EAAGJ,QAAUN,KAE7D,OACE,6BACGQ,EACEG,KAAI,SAAAC,GAAI,OAAI,6BAAgBA,GAAPA,SCnCxBf,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIgB,EAAqB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAgGxCC,EA9FM,WACnB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOjB,EAAP,KAAmBoB,EAAnB,KACA,EAAiCH,mBAAS,IAA1C,mBAAOhB,EAAP,KAAoBoB,EAApB,KACA,EAAsCJ,mBAAS,GAA/C,mBAAOf,EAAP,KAAoBoB,EAApB,KAUMC,EAAS,SAACC,GACdH,EAAUG,IAeZ,OACE,sBAAKC,UAAU,UAAf,WACIP,GAEA,wBACEQ,KAAK,SACLD,UAAU,oBACVE,QA/Ba,WACnBR,GAAa,IA2BT,mBAQF,oBAAIM,UAAU,aAAd,mBACA,qBAAKA,UAAU,oBAAf,SACE,wBACEG,MAAO1B,EACP2B,SAtBS,SAACC,GAChB,IAAQF,EAAUE,EAAEC,OAAZH,MAERN,GAAgBM,IAiBZ,SAIGb,EACEF,KAAI,SAAAD,GAAE,OAAI,wBAAiBgB,MAAOhB,EAAxB,SAA6BA,GAAhBA,UAI9B,wBACEc,KAAK,SACLC,QA7CY,WAChBP,GAAepB,IA6CXyB,UAAU,0BAHZ,qBAOA,wBACEC,KAAK,SACLC,QAAS,kBAAMJ,EAAO,mBACtBE,UAAU,6BAHZ,iCAOA,wBACEC,KAAK,SACLC,QAAS,kBAAMJ,EAAO,WACtBE,UAAU,0BAHZ,4BAOA,wBACEC,KAAK,SACLC,QA1DQ,WACZN,EAAU,IACVD,GAAc,GACdE,EAAe,IAwDXG,UAAU,4BAHZ,mBAOCP,GAEG,cAAC,EAAD,CACEnB,gBAAiBA,EACjBC,WAAYA,EACZC,YAAaA,EACbC,YAAaA,QCvGzB8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.565cfc6e.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goodsFromServer: string[],\n  isReversed: boolean,\n  sortByValue: string,\n  selectValue: number,\n};\n\nexport const GoodsList:React.FC<Props> = ({\n  goodsFromServer,\n  isReversed,\n  sortByValue,\n  selectValue,\n}) => {\n  const visibleGoods = [...goodsFromServer];\n\n  switch (sortByValue) {\n    case 'alphabetically':\n      visibleGoods.sort((el1, el2) => el1.localeCompare(el2));\n      break;\n\n    case 'length':\n      visibleGoods.sort((el1, el2) => el1.length - el2.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  const filteredGoods = visibleGoods.filter(el => el.length <= selectValue);\n\n  return (\n    <ul>\n      {filteredGoods\n        .map(good => <li key={good}>{good}</li>)}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { GoodsList } from './Components/GoodsList/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst selectOptionsValue = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nconst App:React.FC = () => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortByValue, setSortBy] = useState('');\n  const [selectValue, setSelectValue] = useState(1);\n\n  const isClickStart = () => {\n    setIsVisible(true);\n  };\n\n  const isReverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const sortBy = (sortIdentifier: string) => {\n    setSortBy(sortIdentifier);\n  };\n\n  const reset = () => {\n    setSortBy('');\n    setIsReversed(false);\n    setSelectValue(1);\n  };\n\n  const isSelect = (e: React.ChangeEvent) => {\n    const { value } = e.target as HTMLInputElement;\n\n    setSelectValue(+value);\n  };\n\n  return (\n    <div className=\"App box\">\n      {!isVisible\n      && (\n        <button\n          type=\"button\"\n          className=\"button is-success\"\n          onClick={isClickStart}\n        >\n          Start\n        </button>\n      )}\n      <h1 className=\"title is-1\">Goods</h1>\n      <div className=\"select is-success\">\n        <select\n          value={selectValue}\n          onChange={isSelect}\n        >\n          {selectOptionsValue\n            .map(el => <option key={el} value={el}>{el}</option>)}\n        </select>\n\n      </div>\n      <button\n        type=\"button\"\n        onClick={isReverse}\n        className=\"button is-info is-light\"\n      >\n        Reverse\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => sortBy('alphabetically')}\n        className=\"button is-success is-light\"\n      >\n        Sort alphabetically\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => sortBy('length')}\n        className=\"button is-link is-light\"\n      >\n        Sort by length\n      </button>\n      <button\n        type=\"button\"\n        onClick={reset}\n        className=\"button is-danger is-light\"\n      >\n        Reset\n      </button>\n      {isVisible\n        && (\n          <GoodsList\n            goodsFromServer={goodsFromServer}\n            isReversed={isReversed}\n            sortByValue={sortByValue}\n            selectValue={selectValue}\n          />\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}